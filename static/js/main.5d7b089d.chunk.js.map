{"version":3,"sources":["logo.svg","serviceWorker.js","FullPager.js","FadeInText.js","SplashScreen.js","F.js","AI.js","Coe.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","lastSrollTime","lastSucesScreenMovedTime","Date","getTime","currentDeltaY","undefined","lastTouchLocationY","address","defaultLandingPageName","FullPager","props","componentDidMount","validifyAnchorName","setState","isLoading","moveWrapper","state","currentPageAnchorName","addEventListeners","componentWillUnmount","removeEventListeners","getAnchorName","link","anchorName","hasAnchor","substring","lastIndexOf","length","console","log","isAnchorNameValid","changeAddressByAnchor","isValid","sectionContent","forEach","v","i","id","listenerAddCount","removeEventListener","wheelListener","passive","touchmoveListener","addEventListener","event","preventDefault","stablizeScroll","stablizeScreenTouch","timeNow","touchQuietPeriod","animationTime","deltaY","onStableScroll","currentTouchedY","changedTouches","item","clientY","distence","istTimeToMove","scrollQuietPeriod","touchStableConstantNumber","isMoveUp","onStableScreenTouch","thisAnchorName","convertPageIndexToAnchorName","convertAnchorNameToIndex","changeAnchorNameAndAddress","_getIsDirectionUp","currentPageIndex","findingIndex","getCurrentPageIndex","targetAnchorName","index","anchorIndex","assign","getRootAddress","toString","lastIndexOfSlash","textAfterLastSlash","slice","isIncludesHash","includes","fromName","toName","text","bgColor","pagerDistance","this","style","transform","map","className","key","src","alt","vv","ii","Component","FadeInText","delaySpans","presentSpans","delay","origionalText","letter","push","animationDelay","MozAnimationDelay","WebkitAnimationDelay","letterEachDelay","innerText","animationType","setTimeout","SplashScreen","enableChangeColor","myTween","TweenLite","to","myElement","x","y","textDelay","ref","h2","F","Ai","Coe","App","href","target","rel","role","activeClassName","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5d7b089d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport './fullPager.scss';\n\n\nlet lastSrollTime = 0\nlet lastSucesScreenMovedTime = new Date().getTime();\nlet currentDeltaY = undefined\nlet lastTouchLocationY = undefined\nlet address = window.location\nlet defaultLandingPageName = 'hero'\n\nclass FullPager extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            sectionContent: [\n                { id: defaultLandingPageName, text: \"One\", bgColor: \"#3399ee\" },\n                { id: \"f\", text: \"Two\", bgColor: \"#ee3399\" },\n                { id: \"ai\", text: \"Three\", bgColor: \"#33ee99\" },\n                { id: \"coe\", text: \"Four\", bgColor: \"#339999\" },\n                { id: \"footer\", text: \"Five\", bgColor: \"#999933\" }\n            ],\n            touchQuietPeriod: 0,\n            scrollQuietPeriod: 0,\n            animationTime: 1000,\n            touchStableConstantNumber: 2,\n            currentPageAnchorName: this.getAnchorName(address.toString()),\n            isLoading: true\n        }\n    }\n\n    componentDidMount = () => {\n        this.validifyAnchorName()\n        this.setState({ isLoading: false })\n        this.moveWrapper(defaultLandingPageName, this.state.currentPageAnchorName)\n        this.addEventListeners()\n    }\n\n    componentWillUnmount = () => {\n        this.removeEventListeners()\n    }\n\n    getAnchorName = (link) => {\n        let anchorName\n        if (this.hasAnchor(link)) {\n            anchorName = link.substring(link.lastIndexOf('#') + 1, link.length)\n        } else {\n            anchorName = defaultLandingPageName\n        }\n        console.log(anchorName);\n        return anchorName\n    }\n\n    validifyAnchorName = () => {\n        if (!this.isAnchorNameValid(this.state.currentPageAnchorName)) {\n            this.setState({ currentPageAnchorName: defaultLandingPageName }, () => {\n                this.moveWrapper(defaultLandingPageName, this.state.currentPageAnchorName)\n                this.changeAddressByAnchor(defaultLandingPageName)\n            })\n        }\n    }\n\n    isAnchorNameValid = (anchorName) => {\n        let isValid\n        this.state.sectionContent.forEach((v, i) => {\n            if (anchorName === v.id) {\n                isValid = true\n            }\n        })\n        return isValid || false\n    }\n\n    removeEventListeners = () => {\n        this.listenerAddCount = 0\n        window.removeEventListener('wheel', this.wheelListener, { passive: false })\n        window.removeEventListener('touchmove', this.touchmoveListener, { passive: false })\n    }\n\n    addEventListeners = () => {\n        window.addEventListener('wheel', this.wheelListener, { passive: false })\n        window.addEventListener('touchmove', this.touchmoveListener, { passive: false })\n    }\n\n    wheelListener = (event) => {\n        event.preventDefault()\n        this.stablizeScroll(event)\n    }\n\n    touchmoveListener = (event) => {\n        event.preventDefault()\n        this.stablizeScreenTouch(event)\n    }\n\n    stablizeScroll = (event) => {\n        let timeNow = new Date().getTime();\n        let enableScrolling = Boolean(timeNow - lastSrollTime > (this.state.touchQuietPeriod + this.state.animationTime));\n        if (enableScrolling) {\n            currentDeltaY = event.deltaY\n            lastSrollTime = timeNow\n            this.onStableScroll()\n            console.log('stablizeScroll');\n\n        }\n    }\n\n    stablizeScreenTouch = (event) => {\n        let timeNow = new Date().getTime()\n        let currentTouchedY = event.changedTouches.item(0).clientY\n        let distence = currentTouchedY - lastTouchLocationY\n        let istTimeToMove = Boolean(timeNow - lastSucesScreenMovedTime > (this.state.scrollQuietPeriod + this.state.animationTime))\n        let isStablizedDistance = distence >= this.state.touchStableConstantNumber || distence <= -this.state.touchStableConstantNumber\n        let _setLastTouchLocation = () => { lastTouchLocationY = istTimeToMove ? currentTouchedY : undefined }\n        let _setLastTouchTime = () => lastSucesScreenMovedTime = timeNow\n        let _resetDistance = () => distence = 0\n        if (isStablizedDistance && istTimeToMove) {\n            let isMoveUp = (distence < 0) ? -1 : 1\n            console.log(distence);\n            _resetDistance()\n            _setLastTouchTime()\n            this.onStableScreenTouch(isMoveUp)\n        }\n        _setLastTouchLocation()\n    }\n\n    onStableScreenTouch = (isMoveUp) => {\n        let thisAnchorName = this.state.currentPageAnchorName\n        this.moveWrapper(thisAnchorName, this.convertPageIndexToAnchorName(this.convertAnchorNameToIndex(thisAnchorName) - isMoveUp) || thisAnchorName)\n        this.changeAnchorNameAndAddress(isMoveUp)\n    }\n\n    onStableScroll = () => {\n        let _getIsDirectionUp = () => {\n            return (currentDeltaY !== 0) ? ((currentDeltaY < 0) ? 1 : -1) : 0\n        }\n        let thisAnchorName = this.state.currentPageAnchorName\n        this.moveWrapper(thisAnchorName, this.convertPageIndexToAnchorName(this.convertAnchorNameToIndex(thisAnchorName) - _getIsDirectionUp()) || thisAnchorName)\n        this.changeAnchorNameAndAddress(_getIsDirectionUp())\n        console.log('onStableScroll');\n    }\n\n    changeAnchorNameAndAddress = (isMoveUp) => {\n        let getCurrentPageIndex = () => {\n            let findingIndex\n            this.state.sectionContent.forEach((v, i) => {\n                if (this.state.currentPageAnchorName === v.id) {\n                    findingIndex = i\n                }\n            })\n            return findingIndex\n        }\n\n        let currentPageIndex = getCurrentPageIndex()\n        let targetAnchorName = this.convertPageIndexToAnchorName(currentPageIndex - isMoveUp) || this.convertPageIndexToAnchorName(currentPageIndex)\n        this.setState({ currentPageAnchorName: targetAnchorName }, () => {\n            this.changeAddressByAnchor(this.state.currentPageAnchorName)\n            console.log(this.state.currentPageAnchorName);\n        })\n    }\n\n    convertPageIndexToAnchorName = (index) => {\n        let anchorName\n        this.state.sectionContent.forEach((v, i) => {\n            if (index === i) {\n                anchorName = v.id\n            }\n        })\n        return anchorName\n    }\n\n    convertAnchorNameToIndex = (anchorName) => {\n        let anchorIndex\n        this.state.sectionContent.forEach((v, i) => {\n            if (anchorName === v.id) {\n                anchorIndex = i\n            }\n        })\n        return anchorIndex\n    }\n\n    changeAddressByAnchor = (anchorName) => {\n        address.assign(this.getRootAddress(address.toString()) + '#' + anchorName)\n    }\n\n    getRootAddress = (link) => {\n        return this.hasAnchor(link) ? link.substring(0, link.lastIndexOf('#')) : link\n\n    }\n\n    hasAnchor = (link) => {\n        console.log(link);\n        let lastIndexOfSlash = link.lastIndexOf(\"/\")\n        console.log(lastIndexOfSlash);\n        let textAfterLastSlash = link.slice(lastIndexOfSlash)\n        console.log(textAfterLastSlash);\n        let isIncludesHash = textAfterLastSlash.includes(\"#\")\n        console.log(isIncludesHash);\n        return isIncludesHash\n    }\n\n    moveWrapper = (fromName, toName) => {\n        console.log('move from: ' + fromName + ' to ' + toName);\n    }\n\n\n    render() {\n        let pageIndex = this.convertAnchorNameToIndex(this.state.currentPageAnchorName)\n        let pagerDistance = pageIndex * -100\n        return (\n            <div id={\"pagerContainer\"} >\n                <div id={\"pageWrapper\"} style={{ transform: 'translateY(' + pagerDistance + 'vh)' }}>\n                    {\n                        this.state.sectionContent.map((v, i) => {\n                            return (\n                                <section className=\"section\" id={'section-' + v.id} key={i}>\n                                    <img src='https://umas-sunavan.github.io/paging-paging/images/resume.jpg' alt=\"forloading\" />\n                                    <img src='../resume.jpg' alt=\"for loading\" />\n                                    <h2>{v.id}</h2>\n                                    {this.state.sectionContent.map((vv, ii) => {\n                                        return (<h2 id={v.id + '-to-' + vv.id} key={i + '-' + ii}>{vv.text}</h2>)\n                                    })}\n                                </section>)\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default FullPager;\n","import React, { Component } from 'react';\nimport './App.css';\nimport './FadeInText.scss'\n\nclass FadeInText extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            origionalText: this.props.innerText,\n            animationType: this.props.animationType,\n            presentSpans: '',\n            letterEachDelay: this.props.letterEachDelay || 50\n            // animation delay : see FadeInText.scss \n        }\n        setTimeout(() => {\n            switch (this.state.animationType) {\n                case 'fadeInBottom':\n                    this.delaySpans();\n                    break;\n                default:\n                    break;\n            }\n        },\n            this.state.animationDelay\n        )\n    }\n\n    componentDidMount = () => {\n        \n    }\n\n    delaySpans = () => {\n        let presentSpans = []\n        let delay = 0\n        let i = 0\n        for (const letter of this.state.origionalText.toString()) {\n            if (letter !== ' ') {\n                presentSpans.push(<span key={this.props.id + '-' + i} style={{ animationDelay: delay + 'ms', MozAnimationDelay: delay + 'ms', WebkitAnimationDelay: delay + 'ms' }}>{letter}</span>)\n                delay += this.state.letterEachDelay;\n            } else {\n                presentSpans.push()\n            }\n            i += 1\n        }\n        this.setState({ presentSpans: presentSpans })\n    }\n    render() {\n        return (\n            <span className={'cssanimation sequence leFadeInBottom'}>{this.state.presentSpans}</span>\n        )\n    }\n}\n\nexport default FadeInText;","import React, { Component } from 'react';\nimport './App.css';\nimport SplashScreenCss from './SplashScreen.scss'\nimport FadeInText from './FadeInText';\nimport {TweenLite} from 'gsap';\n\nclass SplashScreen extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            enableChangeColor: false\n        }\n        this.myTween = null;\n        this.myElement = null;\n    }\n\n    componentDidMount = () => {\n        setTimeout(() => {\n            this.setState({ enableChangeColor: true })\n        }, 0)\n        this.myTween = TweenLite.to(this.myElement, 1, {x: 100, y: 100});\n    }\n\n    render() {\n        let bgColor = this.state.enableChangeColor ? 'css-theme-color' : 'css-white-color'\n        return (\n            <section id=\"splash-bg\" className={bgColor}>\n                <h1 className={'cssanimation sequence leFadeInBottom'}>cssanimation</h1>\n                <h2>\n                    <FadeInText id=\"introText\" textDelay={1000} animationType={'fadeInBottom'} innerText={'我是蘇桓晨，這是我收藏的作品集，您可以向下瀏覽，或是先。'}></FadeInText>\n                </h2>\n                <h2 ref={h2 => this.myElement = h2} >123</h2>\n            </section>\n        )\n    }\n\n}\n\nexport default SplashScreen;\n","import React, { Component } from 'react';\nimport './App.css';\n\nclass F extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {  \n        }\n    }\n\n    render() {\n        return (\n            <h1>Feather</h1>\n        )\n    }\n\n}\n\nexport default F;\n","import React, { Component } from 'react';\nimport './App.css';\n\nclass Ai extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {  \n        }\n    }\n\n    render() {\n        return (\n            <h1>About Island</h1>\n        )\n    }\n\n}\n\nexport default Ai;\n","import React, { Component } from 'react';\nimport './App.css';\n\nclass Coe extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n        }\n    }\n\n    render() {\n        return (\n            <h1>College of Education</h1>\n        )\n    }\n\n}\n\nexport default Coe;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Link, Switch, Route, NavLink } from 'react-router-dom'\nimport FullPager from './FullPager';\nimport F from './F';\nimport Ai from './AI';\nimport Coe from './Coe';\nimport SplashScreen from './SplashScreen';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n        <h1>React Router Tutorial</h1>\n        <ul role=\"nav\">\n          <li><NavLink to=\"/FullPager\" activeClassName=\"selected\">FullPager</NavLink></li>\n          <li><NavLink to=\"/splashscreen\" activeClassName=\"selected\">splashscreen</NavLink></li>\n          <li><NavLink to=\"/Feather\" activeClassName=\"selected\">Feather</NavLink></li>\n          <li><NavLink to=\"/About-Island\" activeClassName=\"selected\">About-Island</NavLink></li>\n          <li><NavLink to=\"/College-of-Education\" activeClassName=\"selected\">College-of-Education</NavLink></li>\n        </ul>\n      </header>\n      <Switch>\n        <Route path=\"/FullPager\" component={FullPager} />\n        <Route path=\"/Feather\" component={F} />\n        <Route path=\"/About-Island\" component={Ai} />\n        <Route path=\"/College-of-Education\" component={Coe} />\n        <Route path=\"/splashscreen\" component={SplashScreen} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport FullPager from './FullPager';\nimport SplashScreen from './SplashScreen';\nimport { Route, HashRouter, Switch } from 'react-router-dom'\nimport App from './App';\nimport Feather from './F';\nimport Ai from './AI';\nimport Coe from './Coe';\n\n\n\n// ReactDOM.render(\n//     <SplashScreen />, document.getElementById('root')\n// );\n\nReactDOM.render(\n    (\n        <HashRouter>\n            <App/>\n\n            {/* <Route exact path=\"/\" component={App} />\n            <Switch>\n                <Route path=\"/FullPager\" component={FullPager} />\n                <Route path=\"/Feather\" component={Feather} />\n                <Route path=\"/About-Island\" component={Ai} />\n                <Route path=\"/College-of-Education\" component={Coe} />\n                <Route path=\"/splashscreen\" component={SplashScreen} />\n            </Switch> */}\n\n            {/* <Route path=\"/\" component={App}/ >\n            <Route path=\"/FullPager\" component={FullPager} />\n            <Route path=\"/Feather\" component={Feather} />\n            <Route path=\"/About-Island\" component={Ai} />\n            <Route path=\"/College-of-Education\" component={Coe} />\n            <Route path=\"/splashscreen\" component={SplashScreen} /> */}\n\n        </HashRouter>\n    ), document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}